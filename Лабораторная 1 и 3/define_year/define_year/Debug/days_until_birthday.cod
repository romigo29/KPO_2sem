; Listing generated by Microsoft (R) Optimizing Compiler Version 19.39.33521.0 

	TITLE	D:\BSTU\2 семестр\КПО\Лабораторная 1 и 3\define_year\define_year\Debug\days_until_birthday.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

msvcjmc	SEGMENT
__FE09AF47_concurrencysal@h DB 01H
__C073CA79_sal@h DB 01H
__D6AFE870_vadefs@h DB 01H
__D63E96CF_vcruntime@h DB 01H
__32E3D3D2_xkeycheck@h DB 01H
__CFD6EDFA_yvals_core@h DB 01H
__10D4A829_limits@h DB 01H
__9CD02892_climits DB 01H
__1B0272D9_corecrt@h DB 01H
__A3D3E4E8_vcruntime_new@h DB 01H
__8D1A214D_vcruntime_new_debug@h DB 01H
__935DC21B_crtdbg@h DB 01H
__497BC13E_crtdefs@h DB 01H
__DDE8D0E0_use_ansi@h DB 01H
__AE7FBCDF_yvals@h DB 01H
__BB16330F_corecrt_math@h DB 01H
__3BF2A406_math@h DB 01H
__45DED006_corecrt_malloc@h DB 01H
__13F5961F_stddef@h DB 01H
__FD6DBD68_corecrt_search@h DB 01H
__E2E33A61_corecrt_wstdlib@h DB 01H
__6E5ACABA_stdlib@h DB 01H
__183F0A60_cstdlib DB 01H
__26E6E2A9_xtr1common DB 01H
__F5A7E1DF_intrin0@inl@h DB 01H
__50567835_intrin0@h DB 01H
__A2C9C4CE_cmath DB 01H
__44420885_corecrt_stdio_config@h DB 01H
__AB601D8D_corecrt_wstdio@h DB 01H
__C1EC35D3_stdio@h DB 01H
__1C5946C5_cstdio DB 01H
__61CC25A1_errno@h DB 01H
__3EADF068_vcruntime_string@h DB 01H
__E4C945B4_corecrt_memcpy_s@h DB 01H
__8EAFF484_corecrt_memory@h DB 01H
__6490AEC5_corecrt_wstring@h DB 01H
__E8295E1E_string@h DB 01H
__54ADA280_cstring DB 01H
__EF1F6BBA_corecrt_wconio@h DB 01H
__74484FB3_corecrt_wctype@h DB 01H
__3D1D430C_corecrt_wdirect@h DB 01H
__8ECB7138_corecrt_share@h DB 01H
__DB7FEBA6_corecrt_wio@h DB 01H
__9A9F0068_corecrt_wprocess@h DB 01H
__369A9BC3_corecrt_wtime@h DB 01H
__CE789B9D_types@h DB 01H
__9901C817_stat@h DB 01H
__3FCAD62E_wchar@h DB 01H
__86D29096_cwchar DB 01H
__C51215A0_iosfwd DB 01H
__BDF4D0CD_cstddef DB 01H
__E4CFD974_initializer_list DB 01H
__AEA28616_stdint@h DB 01H
__A561EB1D_cstdint DB 01H
__7C4A1519_type_traits DB 01H
__2F328FEB_utility DB 01H
__91F58E7E___msvc_iter_core@hpp DB 01H
__C27AFEEB_xutility DB 01H
__D3D649AB_iterator DB 01H
__F7972D0B_share@h DB 01H
__F338F6F9___msvc_system_error_abi@hpp DB 01H
__8178323E_cerrno DB 01H
__FA77ED4C_malloc@h DB 01H
__89766DA4_corecrt_terminate@h DB 01H
__EEF52EF9_eh@h DB 01H
__85F4241F_vcruntime_exception@h DB 01H
__8124AFA8_exception DB 01H
__BE6CFB00___msvc_sanitizer_annotate_container@hpp DB 01H
__B9985323_float@h DB 01H
__6F1D8D42_cfloat DB 01H
__09FBC026_limits DB 01H
__5003AD96_new DB 01H
__8B28237E_xatomic@h DB 01H
__45A7EC28_xmemory DB 01H
__31746AB4_xstring DB 01H
__086A95F5_stdexcept DB 01H
__8C4E33AA_xcall_once@h DB 01H
__06EAA9D0_xerrc@h DB 01H
__0A9237D2_time@h DB 01H
__647A58C6_ctime DB 01H
__74BE1DAA_xtimec@h DB 01H
__BCA6E753_xthreads@h DB 01H
__62CE9CE4_atomic DB 01H
__3313218A_system_error DB 01H
__851B68E1_vcruntime_typeinfo@h DB 01H
__B2A50DF2_typeinfo DB 01H
__B555CCA8_memory DB 01H
__99109BA7_xfacet DB 01H
__F99E20B2___msvc_xlocinfo_types@hpp DB 01H
__1EC467ED_ctype@h DB 01H
__1392A162_cctype DB 01H
__791C33B7_locale@h DB 01H
__8B93D6B1_clocale DB 01H
__AD2CEE3A_xlocinfo DB 01H
__EE4A1E85_xlocale DB 01H
__94C99929_xiosbase DB 01H
__0ACA2D49_streambuf DB 01H
__70CD7892_xlocnum DB 01H
__A8CE9780_ios DB 01H
__FD5AC441_ostream DB 01H
__9E8AF17B_istream DB 01H
__A00384F4_iostream DB 01H
__CADDE223_stdafx@h DB 01H
__4984DC8A_days_until_birthday@cpp DB 01H
msvcjmc	ENDS
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	?leftUntilBirthday@@YAHPAD0PAH@Z		; leftUntilBirthday
PUBLIC	__JustMyCode_Default
EXTRN	?isYearLeap@@YAHH@Z:PROC			; isYearLeap
EXTRN	?getDay@@YAHPAD@Z:PROC				; getDay
EXTRN	?getMonth@@YAHPAD@Z:PROC			; getMonth
EXTRN	?getYear@@YAHPAD@Z:PROC				; getYear
EXTRN	@__CheckForDebuggerJustMyCode@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\BSTU\2 семестр\КПО\Лабораторная 1 и 3\define_year\define_year\days_until_birthday.cpp
;	COMDAT ?leftUntilBirthday@@YAHPAD0PAH@Z
_TEXT	SEGMENT
_i$1 = -104						; size = 4
_i$2 = -92						; size = 4
_leap_year$ = -80					; size = 4
_year$ = -68						; size = 4
_month_birth$ = -56					; size = 4
_day_birth$ = -44					; size = 4
_month_current$ = -32					; size = 4
_day_current$ = -20					; size = 4
_daysLeft$ = -8						; size = 4
_current_date$ = 8					; size = 4
_birth_date$ = 12					; size = 4
_months_list$ = 16					; size = 4
?leftUntilBirthday@@YAHPAD0PAH@Z PROC			; leftUntilBirthday, COMDAT

; 3    : int leftUntilBirthday(char* current_date, char* birth_date, int* months_list) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 2c 01 00
	00		 sub	 esp, 300		; 0000012cH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d 7d 94	 lea	 edi, DWORD PTR [ebp-108]
  0000f	b9 1b 00 00 00	 mov	 ecx, 27			; 0000001bH
  00014	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00019	f3 ab		 rep stosd
  0001b	b9 00 00 00 00	 mov	 ecx, OFFSET __4984DC8A_days_until_birthday@cpp
  00020	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 4    :     int daysLeft = 0;

  00025	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _daysLeft$[ebp], 0

; 5    :     int day_current = getDay(current_date);

  0002c	8b 45 08	 mov	 eax, DWORD PTR _current_date$[ebp]
  0002f	50		 push	 eax
  00030	e8 00 00 00 00	 call	 ?getDay@@YAHPAD@Z	; getDay
  00035	83 c4 04	 add	 esp, 4
  00038	89 45 ec	 mov	 DWORD PTR _day_current$[ebp], eax

; 6    :     int month_current = getMonth(current_date);

  0003b	8b 45 08	 mov	 eax, DWORD PTR _current_date$[ebp]
  0003e	50		 push	 eax
  0003f	e8 00 00 00 00	 call	 ?getMonth@@YAHPAD@Z	; getMonth
  00044	83 c4 04	 add	 esp, 4
  00047	89 45 e0	 mov	 DWORD PTR _month_current$[ebp], eax

; 7    :     int day_birth = getDay(birth_date);

  0004a	8b 45 0c	 mov	 eax, DWORD PTR _birth_date$[ebp]
  0004d	50		 push	 eax
  0004e	e8 00 00 00 00	 call	 ?getDay@@YAHPAD@Z	; getDay
  00053	83 c4 04	 add	 esp, 4
  00056	89 45 d4	 mov	 DWORD PTR _day_birth$[ebp], eax

; 8    :     int month_birth = getMonth(birth_date);

  00059	8b 45 0c	 mov	 eax, DWORD PTR _birth_date$[ebp]
  0005c	50		 push	 eax
  0005d	e8 00 00 00 00	 call	 ?getMonth@@YAHPAD@Z	; getMonth
  00062	83 c4 04	 add	 esp, 4
  00065	89 45 c8	 mov	 DWORD PTR _month_birth$[ebp], eax

; 9    :     int year = getYear(current_date);

  00068	8b 45 08	 mov	 eax, DWORD PTR _current_date$[ebp]
  0006b	50		 push	 eax
  0006c	e8 00 00 00 00	 call	 ?getYear@@YAHPAD@Z	; getYear
  00071	83 c4 04	 add	 esp, 4
  00074	89 45 bc	 mov	 DWORD PTR _year$[ebp], eax

; 10   :     int leap_year = isYearLeap(year);

  00077	8b 45 bc	 mov	 eax, DWORD PTR _year$[ebp]
  0007a	50		 push	 eax
  0007b	e8 00 00 00 00	 call	 ?isYearLeap@@YAHH@Z	; isYearLeap
  00080	83 c4 04	 add	 esp, 4
  00083	89 45 b0	 mov	 DWORD PTR _leap_year$[ebp], eax

; 11   :     if (month_current < month_birth) { // если др еще будет в этом году

  00086	8b 45 e0	 mov	 eax, DWORD PTR _month_current$[ebp]
  00089	3b 45 c8	 cmp	 eax, DWORD PTR _month_birth$[ebp]
  0008c	7d 2b		 jge	 SHORT $LN3@leftUntilB

; 12   :         for (int i = month_current; i < month_birth; i++) {

  0008e	8b 45 e0	 mov	 eax, DWORD PTR _month_current$[ebp]
  00091	89 45 a4	 mov	 DWORD PTR _i$2[ebp], eax
  00094	eb 09		 jmp	 SHORT $LN4@leftUntilB
$LN2@leftUntilB:
  00096	8b 45 a4	 mov	 eax, DWORD PTR _i$2[ebp]
  00099	83 c0 01	 add	 eax, 1
  0009c	89 45 a4	 mov	 DWORD PTR _i$2[ebp], eax
$LN4@leftUntilB:
  0009f	8b 45 a4	 mov	 eax, DWORD PTR _i$2[ebp]
  000a2	3b 45 c8	 cmp	 eax, DWORD PTR _month_birth$[ebp]
  000a5	7d 12		 jge	 SHORT $LN3@leftUntilB

; 13   :             daysLeft += months_list[i - 1];

  000a7	8b 45 a4	 mov	 eax, DWORD PTR _i$2[ebp]
  000aa	8b 4d 10	 mov	 ecx, DWORD PTR _months_list$[ebp]
  000ad	8b 55 f8	 mov	 edx, DWORD PTR _daysLeft$[ebp]
  000b0	03 54 81 fc	 add	 edx, DWORD PTR [ecx+eax*4-4]
  000b4	89 55 f8	 mov	 DWORD PTR _daysLeft$[ebp], edx

; 14   :         }

  000b7	eb dd		 jmp	 SHORT $LN2@leftUntilB
$LN3@leftUntilB:

; 15   :     }
; 16   :     if (month_current > month_birth) { //если др был в предыдщуем месяце

  000b9	8b 45 e0	 mov	 eax, DWORD PTR _month_current$[ebp]
  000bc	3b 45 c8	 cmp	 eax, DWORD PTR _month_birth$[ebp]
  000bf	7e 39		 jle	 SHORT $LN9@leftUntilB

; 17   :         for (int i = month_birth; i < month_current; i++) {

  000c1	8b 45 c8	 mov	 eax, DWORD PTR _month_birth$[ebp]
  000c4	89 45 98	 mov	 DWORD PTR _i$1[ebp], eax
  000c7	eb 09		 jmp	 SHORT $LN7@leftUntilB
$LN5@leftUntilB:
  000c9	8b 45 98	 mov	 eax, DWORD PTR _i$1[ebp]
  000cc	83 c0 01	 add	 eax, 1
  000cf	89 45 98	 mov	 DWORD PTR _i$1[ebp], eax
$LN7@leftUntilB:
  000d2	8b 45 98	 mov	 eax, DWORD PTR _i$1[ebp]
  000d5	3b 45 e0	 cmp	 eax, DWORD PTR _month_current$[ebp]
  000d8	7d 12		 jge	 SHORT $LN6@leftUntilB

; 18   :             daysLeft += months_list[i - 1];

  000da	8b 45 98	 mov	 eax, DWORD PTR _i$1[ebp]
  000dd	8b 4d 10	 mov	 ecx, DWORD PTR _months_list$[ebp]
  000e0	8b 55 f8	 mov	 edx, DWORD PTR _daysLeft$[ebp]
  000e3	03 54 81 fc	 add	 edx, DWORD PTR [ecx+eax*4-4]
  000e7	89 55 f8	 mov	 DWORD PTR _daysLeft$[ebp], edx

; 19   :         }

  000ea	eb dd		 jmp	 SHORT $LN5@leftUntilB
$LN6@leftUntilB:

; 20   :         daysLeft = 365 + leap_year - daysLeft;

  000ec	8b 45 b0	 mov	 eax, DWORD PTR _leap_year$[ebp]
  000ef	05 6d 01 00 00	 add	 eax, 365		; 0000016dH
  000f4	2b 45 f8	 sub	 eax, DWORD PTR _daysLeft$[ebp]
  000f7	89 45 f8	 mov	 DWORD PTR _daysLeft$[ebp], eax
$LN9@leftUntilB:

; 21   :     }
; 22   :     if (month_current == month_birth && day_current > day_birth) { //если др был в текущем месяце

  000fa	8b 45 e0	 mov	 eax, DWORD PTR _month_current$[ebp]
  000fd	3b 45 c8	 cmp	 eax, DWORD PTR _month_birth$[ebp]
  00100	75 18		 jne	 SHORT $LN10@leftUntilB
  00102	8b 45 ec	 mov	 eax, DWORD PTR _day_current$[ebp]
  00105	3b 45 d4	 cmp	 eax, DWORD PTR _day_birth$[ebp]
  00108	7e 10		 jle	 SHORT $LN10@leftUntilB

; 23   :         daysLeft += 365 + leap_year;

  0010a	8b 45 b0	 mov	 eax, DWORD PTR _leap_year$[ebp]
  0010d	8b 4d f8	 mov	 ecx, DWORD PTR _daysLeft$[ebp]
  00110	8d 94 01 6d 01
	00 00		 lea	 edx, DWORD PTR [ecx+eax+365]
  00117	89 55 f8	 mov	 DWORD PTR _daysLeft$[ebp], edx
$LN10@leftUntilB:

; 24   :     }
; 25   :     daysLeft += day_birth;

  0011a	8b 45 f8	 mov	 eax, DWORD PTR _daysLeft$[ebp]
  0011d	03 45 d4	 add	 eax, DWORD PTR _day_birth$[ebp]
  00120	89 45 f8	 mov	 DWORD PTR _daysLeft$[ebp], eax

; 26   :     daysLeft -= day_current;

  00123	8b 45 f8	 mov	 eax, DWORD PTR _daysLeft$[ebp]
  00126	2b 45 ec	 sub	 eax, DWORD PTR _day_current$[ebp]
  00129	89 45 f8	 mov	 DWORD PTR _daysLeft$[ebp], eax

; 27   :     return daysLeft;

  0012c	8b 45 f8	 mov	 eax, DWORD PTR _daysLeft$[ebp]

; 28   : }

  0012f	5f		 pop	 edi
  00130	5e		 pop	 esi
  00131	5b		 pop	 ebx
  00132	81 c4 2c 01 00
	00		 add	 esp, 300		; 0000012cH
  00138	3b ec		 cmp	 ebp, esp
  0013a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0013f	8b e5		 mov	 esp, ebp
  00141	5d		 pop	 ebp
  00142	c3		 ret	 0
?leftUntilBirthday@@YAHPAD0PAH@Z ENDP			; leftUntilBirthday
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\BSTU\2 семестр\КПО\Лабораторная 1 и 3\define_year\define_year\days_until_birthday.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8b fd		 mov	 edi, ebp
  0000e	33 c9		 xor	 ecx, ecx
  00010	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00015	f3 ab		 rep stosd
  00017	b9 00 00 00 00	 mov	 ecx, OFFSET __4984DC8A_days_until_birthday@cpp
  0001c	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0002a	3b ec		 cmp	 ebp, esp
  0002c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\BSTU\2 семестр\КПО\Лабораторная 1 и 3\define_year\define_year\days_until_birthday.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8b fd		 mov	 edi, ebp
  0000e	33 c9		 xor	 ecx, ecx
  00010	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00015	f3 ab		 rep stosd
  00017	b9 00 00 00 00	 mov	 ecx, OFFSET __4984DC8A_days_until_birthday@cpp
  0001c	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0002a	3b ec		 cmp	 ebp, esp
  0002c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
