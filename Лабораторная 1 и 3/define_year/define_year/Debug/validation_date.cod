; Listing generated by Microsoft (R) Optimizing Compiler Version 19.39.33521.0 

	TITLE	D:\BSTU\2 семестр\КПО\Лабораторная 1 и 3\define_year\define_year\Debug\validation_date.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

msvcjmc	SEGMENT
__FE09AF47_concurrencysal@h DB 01H
__C073CA79_sal@h DB 01H
__D6AFE870_vadefs@h DB 01H
__D63E96CF_vcruntime@h DB 01H
__32E3D3D2_xkeycheck@h DB 01H
__CFD6EDFA_yvals_core@h DB 01H
__10D4A829_limits@h DB 01H
__9CD02892_climits DB 01H
__1B0272D9_corecrt@h DB 01H
__A3D3E4E8_vcruntime_new@h DB 01H
__8D1A214D_vcruntime_new_debug@h DB 01H
__935DC21B_crtdbg@h DB 01H
__497BC13E_crtdefs@h DB 01H
__DDE8D0E0_use_ansi@h DB 01H
__AE7FBCDF_yvals@h DB 01H
__BB16330F_corecrt_math@h DB 01H
__3BF2A406_math@h DB 01H
__45DED006_corecrt_malloc@h DB 01H
__13F5961F_stddef@h DB 01H
__FD6DBD68_corecrt_search@h DB 01H
__E2E33A61_corecrt_wstdlib@h DB 01H
__6E5ACABA_stdlib@h DB 01H
__183F0A60_cstdlib DB 01H
__26E6E2A9_xtr1common DB 01H
__F5A7E1DF_intrin0@inl@h DB 01H
__50567835_intrin0@h DB 01H
__A2C9C4CE_cmath DB 01H
__44420885_corecrt_stdio_config@h DB 01H
__AB601D8D_corecrt_wstdio@h DB 01H
__C1EC35D3_stdio@h DB 01H
__1C5946C5_cstdio DB 01H
__61CC25A1_errno@h DB 01H
__3EADF068_vcruntime_string@h DB 01H
__E4C945B4_corecrt_memcpy_s@h DB 01H
__8EAFF484_corecrt_memory@h DB 01H
__6490AEC5_corecrt_wstring@h DB 01H
__E8295E1E_string@h DB 01H
__54ADA280_cstring DB 01H
__EF1F6BBA_corecrt_wconio@h DB 01H
__74484FB3_corecrt_wctype@h DB 01H
__3D1D430C_corecrt_wdirect@h DB 01H
__8ECB7138_corecrt_share@h DB 01H
__DB7FEBA6_corecrt_wio@h DB 01H
__9A9F0068_corecrt_wprocess@h DB 01H
__369A9BC3_corecrt_wtime@h DB 01H
__CE789B9D_types@h DB 01H
__9901C817_stat@h DB 01H
__3FCAD62E_wchar@h DB 01H
__86D29096_cwchar DB 01H
__C51215A0_iosfwd DB 01H
__BDF4D0CD_cstddef DB 01H
__E4CFD974_initializer_list DB 01H
__AEA28616_stdint@h DB 01H
__A561EB1D_cstdint DB 01H
__7C4A1519_type_traits DB 01H
__2F328FEB_utility DB 01H
__91F58E7E___msvc_iter_core@hpp DB 01H
__C27AFEEB_xutility DB 01H
__D3D649AB_iterator DB 01H
__F7972D0B_share@h DB 01H
__F338F6F9___msvc_system_error_abi@hpp DB 01H
__8178323E_cerrno DB 01H
__FA77ED4C_malloc@h DB 01H
__89766DA4_corecrt_terminate@h DB 01H
__EEF52EF9_eh@h DB 01H
__85F4241F_vcruntime_exception@h DB 01H
__8124AFA8_exception DB 01H
__BE6CFB00___msvc_sanitizer_annotate_container@hpp DB 01H
__B9985323_float@h DB 01H
__6F1D8D42_cfloat DB 01H
__09FBC026_limits DB 01H
__5003AD96_new DB 01H
__8B28237E_xatomic@h DB 01H
__45A7EC28_xmemory DB 01H
__31746AB4_xstring DB 01H
__086A95F5_stdexcept DB 01H
__8C4E33AA_xcall_once@h DB 01H
__06EAA9D0_xerrc@h DB 01H
__0A9237D2_time@h DB 01H
__647A58C6_ctime DB 01H
__74BE1DAA_xtimec@h DB 01H
__BCA6E753_xthreads@h DB 01H
__62CE9CE4_atomic DB 01H
__3313218A_system_error DB 01H
__851B68E1_vcruntime_typeinfo@h DB 01H
__B2A50DF2_typeinfo DB 01H
__B555CCA8_memory DB 01H
__99109BA7_xfacet DB 01H
__F99E20B2___msvc_xlocinfo_types@hpp DB 01H
__1EC467ED_ctype@h DB 01H
__1392A162_cctype DB 01H
__791C33B7_locale@h DB 01H
__8B93D6B1_clocale DB 01H
__AD2CEE3A_xlocinfo DB 01H
__EE4A1E85_xlocale DB 01H
__94C99929_xiosbase DB 01H
__0ACA2D49_streambuf DB 01H
__70CD7892_xlocnum DB 01H
__A8CE9780_ios DB 01H
__FD5AC441_ostream DB 01H
__9E8AF17B_istream DB 01H
__A00384F4_iostream DB 01H
__CADDE223_stdafx@h DB 01H
__E72BE5C4_validation_date@cpp DB 01H
msvcjmc	ENDS
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	?isDateValid@@YA_NPAD@Z				; isDateValid
PUBLIC	__JustMyCode_Default
EXTRN	_strlen:PROC
EXTRN	__imp__isdigit:PROC
EXTRN	?isYearLeap@@YAHH@Z:PROC			; isYearLeap
EXTRN	?getDay@@YAHPAD@Z:PROC				; getDay
EXTRN	?getMonth@@YAHPAD@Z:PROC			; getMonth
EXTRN	?getYear@@YAHPAD@Z:PROC				; getYear
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__CheckForDebuggerJustMyCode@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\BSTU\2 семестр\КПО\Лабораторная 1 и 3\define_year\define_year\validation_date.cpp
;	COMDAT ?isDateValid@@YA_NPAD@Z
_TEXT	SEGMENT
_months_list$ = -112					; size = 48
_leap_year$ = -56					; size = 4
_year$ = -44						; size = 4
_month$ = -32						; size = 4
_day$ = -20						; size = 4
_i$1 = -8						; size = 4
_date$ = 8						; size = 4
?isDateValid@@YA_NPAD@Z PROC				; isDateValid, COMDAT

; 3    : bool isDateValid(char* date) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 34 01 00
	00		 sub	 esp, 308		; 00000134H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d 7d 8c	 lea	 edi, DWORD PTR [ebp-116]
  0000f	b9 1d 00 00 00	 mov	 ecx, 29			; 0000001dH
  00014	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00019	f3 ab		 rep stosd
  0001b	b9 00 00 00 00	 mov	 ecx, OFFSET __E72BE5C4_validation_date@cpp
  00020	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 4    : 
; 5    :     if (strlen(date) != 8) {   // проверка длины строки

  00025	8b 45 08	 mov	 eax, DWORD PTR _date$[ebp]
  00028	50		 push	 eax
  00029	e8 00 00 00 00	 call	 _strlen
  0002e	83 c4 04	 add	 esp, 4
  00031	83 f8 08	 cmp	 eax, 8
  00034	74 07		 je	 SHORT $LN5@isDateVali

; 6    :         return false;

  00036	32 c0		 xor	 al, al
  00038	e9 e5 00 00 00	 jmp	 $LN1@isDateVali
$LN5@isDateVali:

; 7    :     }
; 8    :     for (int i = 0; i < 8; i++) {   //проверки элементов на числа

  0003d	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  00044	eb 09		 jmp	 SHORT $LN4@isDateVali
$LN2@isDateVali:
  00046	8b 45 f8	 mov	 eax, DWORD PTR _i$1[ebp]
  00049	83 c0 01	 add	 eax, 1
  0004c	89 45 f8	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@isDateVali:
  0004f	83 7d f8 08	 cmp	 DWORD PTR _i$1[ebp], 8
  00053	7d 29		 jge	 SHORT $LN3@isDateVali

; 9    :         if (!isdigit(date[i])) {

  00055	8b 45 08	 mov	 eax, DWORD PTR _date$[ebp]
  00058	03 45 f8	 add	 eax, DWORD PTR _i$1[ebp]
  0005b	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  0005e	8b f4		 mov	 esi, esp
  00060	51		 push	 ecx
  00061	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__isdigit
  00067	83 c4 04	 add	 esp, 4
  0006a	3b f4		 cmp	 esi, esp
  0006c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00071	85 c0		 test	 eax, eax
  00073	75 07		 jne	 SHORT $LN6@isDateVali

; 10   :             return false;

  00075	32 c0		 xor	 al, al
  00077	e9 a6 00 00 00	 jmp	 $LN1@isDateVali
$LN6@isDateVali:

; 11   :         }
; 12   :     }

  0007c	eb c8		 jmp	 SHORT $LN2@isDateVali
$LN3@isDateVali:

; 13   :     int day = getDay(date);   // создание переменных для дня, месяца и года

  0007e	8b 45 08	 mov	 eax, DWORD PTR _date$[ebp]
  00081	50		 push	 eax
  00082	e8 00 00 00 00	 call	 ?getDay@@YAHPAD@Z	; getDay
  00087	83 c4 04	 add	 esp, 4
  0008a	89 45 ec	 mov	 DWORD PTR _day$[ebp], eax

; 14   :     int month = getMonth(date);

  0008d	8b 45 08	 mov	 eax, DWORD PTR _date$[ebp]
  00090	50		 push	 eax
  00091	e8 00 00 00 00	 call	 ?getMonth@@YAHPAD@Z	; getMonth
  00096	83 c4 04	 add	 esp, 4
  00099	89 45 e0	 mov	 DWORD PTR _month$[ebp], eax

; 15   :     int year = getYear(date);

  0009c	8b 45 08	 mov	 eax, DWORD PTR _date$[ebp]
  0009f	50		 push	 eax
  000a0	e8 00 00 00 00	 call	 ?getYear@@YAHPAD@Z	; getYear
  000a5	83 c4 04	 add	 esp, 4
  000a8	89 45 d4	 mov	 DWORD PTR _year$[ebp], eax

; 16   :     int leap_year = isYearLeap(year);

  000ab	8b 45 d4	 mov	 eax, DWORD PTR _year$[ebp]
  000ae	50		 push	 eax
  000af	e8 00 00 00 00	 call	 ?isYearLeap@@YAHH@Z	; isYearLeap
  000b4	83 c4 04	 add	 esp, 4
  000b7	89 45 c8	 mov	 DWORD PTR _leap_year$[ebp], eax

; 17   :     int months_list[] = { 31, 28 + leap_year, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };

  000ba	c7 45 90 1f 00
	00 00		 mov	 DWORD PTR _months_list$[ebp], 31 ; 0000001fH
  000c1	8b 45 c8	 mov	 eax, DWORD PTR _leap_year$[ebp]
  000c4	83 c0 1c	 add	 eax, 28			; 0000001cH
  000c7	89 45 94	 mov	 DWORD PTR _months_list$[ebp+4], eax
  000ca	c7 45 98 1f 00
	00 00		 mov	 DWORD PTR _months_list$[ebp+8], 31 ; 0000001fH
  000d1	c7 45 9c 1e 00
	00 00		 mov	 DWORD PTR _months_list$[ebp+12], 30 ; 0000001eH
  000d8	c7 45 a0 1f 00
	00 00		 mov	 DWORD PTR _months_list$[ebp+16], 31 ; 0000001fH
  000df	c7 45 a4 1e 00
	00 00		 mov	 DWORD PTR _months_list$[ebp+20], 30 ; 0000001eH
  000e6	c7 45 a8 1f 00
	00 00		 mov	 DWORD PTR _months_list$[ebp+24], 31 ; 0000001fH
  000ed	c7 45 ac 1f 00
	00 00		 mov	 DWORD PTR _months_list$[ebp+28], 31 ; 0000001fH
  000f4	c7 45 b0 1e 00
	00 00		 mov	 DWORD PTR _months_list$[ebp+32], 30 ; 0000001eH
  000fb	c7 45 b4 1f 00
	00 00		 mov	 DWORD PTR _months_list$[ebp+36], 31 ; 0000001fH
  00102	c7 45 b8 1e 00
	00 00		 mov	 DWORD PTR _months_list$[ebp+40], 30 ; 0000001eH
  00109	c7 45 bc 1f 00
	00 00		 mov	 DWORD PTR _months_list$[ebp+44], 31 ; 0000001fH

; 18   :     if (day > months_list[month - 1]) {

  00110	8b 45 e0	 mov	 eax, DWORD PTR _month$[ebp]
  00113	8b 4d ec	 mov	 ecx, DWORD PTR _day$[ebp]
  00116	3b 4c 85 8c	 cmp	 ecx, DWORD PTR _months_list$[ebp+eax*4-4]
  0011a	7e 04		 jle	 SHORT $LN7@isDateVali

; 19   :         return false;

  0011c	32 c0		 xor	 al, al
  0011e	eb 02		 jmp	 SHORT $LN1@isDateVali
$LN7@isDateVali:

; 20   :     }
; 21   :     return true;

  00120	b0 01		 mov	 al, 1
$LN1@isDateVali:

; 22   : }

  00122	52		 push	 edx
  00123	8b cd		 mov	 ecx, ebp
  00125	50		 push	 eax
  00126	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN11@isDateVali
  0012c	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00131	58		 pop	 eax
  00132	5a		 pop	 edx
  00133	5f		 pop	 edi
  00134	5e		 pop	 esi
  00135	5b		 pop	 ebx
  00136	81 c4 34 01 00
	00		 add	 esp, 308		; 00000134H
  0013c	3b ec		 cmp	 ebp, esp
  0013e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00143	8b e5		 mov	 esp, ebp
  00145	5d		 pop	 ebp
  00146	c3		 ret	 0
  00147	90		 npad	 1
$LN11@isDateVali:
  00148	01 00 00 00	 DD	 1
  0014c	00 00 00 00	 DD	 $LN10@isDateVali
$LN10@isDateVali:
  00150	90 ff ff ff	 DD	 -112			; ffffff90H
  00154	30 00 00 00	 DD	 48			; 00000030H
  00158	00 00 00 00	 DD	 $LN9@isDateVali
$LN9@isDateVali:
  0015c	6d		 DB	 109			; 0000006dH
  0015d	6f		 DB	 111			; 0000006fH
  0015e	6e		 DB	 110			; 0000006eH
  0015f	74		 DB	 116			; 00000074H
  00160	68		 DB	 104			; 00000068H
  00161	73		 DB	 115			; 00000073H
  00162	5f		 DB	 95			; 0000005fH
  00163	6c		 DB	 108			; 0000006cH
  00164	69		 DB	 105			; 00000069H
  00165	73		 DB	 115			; 00000073H
  00166	74		 DB	 116			; 00000074H
  00167	00		 DB	 0
?isDateValid@@YA_NPAD@Z ENDP				; isDateValid
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\BSTU\2 семестр\КПО\Лабораторная 1 и 3\define_year\define_year\validation_date.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8b fd		 mov	 edi, ebp
  0000e	33 c9		 xor	 ecx, ecx
  00010	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00015	f3 ab		 rep stosd
  00017	b9 00 00 00 00	 mov	 ecx, OFFSET __E72BE5C4_validation_date@cpp
  0001c	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0002a	3b ec		 cmp	 ebp, esp
  0002c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\BSTU\2 семестр\КПО\Лабораторная 1 и 3\define_year\define_year\validation_date.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8b fd		 mov	 edi, ebp
  0000e	33 c9		 xor	 ecx, ecx
  00010	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00015	f3 ab		 rep stosd
  00017	b9 00 00 00 00	 mov	 ecx, OFFSET __E72BE5C4_validation_date@cpp
  0001c	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0002a	3b ec		 cmp	 ebp, esp
  0002c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
